<form script="components/popovers/popovers_main.js" stylesheet="overview.css,components/popovers/popovers_main.css" theme="light">
  <label>Popovers </label>
  <init>
    <set token="popoverContent">Content from a Token</set>
  </init>
  <row>
    <panel>
      <html>
        <section>
          <h3>Why?</h3>
          <p>Mit einem Popover können kleinere Informationen in einem Kontext angezeigt werden. Im Gengensatz zu Tooltips bringen Popovers 
          etwas mehr Styling mit und können eine Überschrift haben. 
          </p>
           <p>Popover sind konfigurierbar und können über Optionen angepasst werden: 
            <ul>
              <li>Ausrichtung</li>
              <li>Trigger</li>
              <li>...</li>
            </ul>
          </p>
          <p>
            Der Content eines Popovers kann auch aus komplexeren HTML-Strukturen bestehen - je nach dem, sollte dann aber eher auf ein Popup zurückgegriffen werden.
          </p>
          <p>
            Die Idee hierzu stammt aus <a class="external" href="https://splunkbase.splunk.com/app/4104/">Splunk Dev For All App</a> 
            und wurde um Theming etc. erweitert. 
          </p>
          <p>  
            Die Erweiterung basiert wiederum auf Bootstrap Popovers: <a class="external" href="https://getbootstrap.com/docs/4.3/components/popovers/">Doku zu Bootstrap</a>
          </p>
        </section>
      </html>
    </panel>
    <panel>
      <html>
        <section>
          <h3>Where?</h3>
          <p>
            Popover sind sehr flexibel und können unter anderem an
            <ul>
              <li>HTML-Elemente mit einem Data-Attribut</li>
              <li>Überschriften von Splunk-Elementen, wie Inputs, Panels etc.</li>
              <li>Zellen in Tabellen über einen BaseCellRenderer</li>
            </ul>
          </p>
        </section>
      </html>
    </panel>
    <panel>
      <html>
        <section>
          <h3>How?</h3>
          <p>Popover können direkt im HTML mit data-Attributen oder aber in Javascript konfiguriert werden. Da Splunk auch Tokens im Html auswertet, 
          kann der Inhalt und Title eines Popovers auch über Tokens gefüllt werden. Weitere Infos in der Dokumentation und in den Beispielen.</p>
        </section>
      </html>
    </panel>
  </row>

  <row id="info">
    <panel>
      <title>Init in HTML</title>
      <html>
        <p> 
          <a href="#" title="See What I Did There?" data-placement="right" data-toggle="popover" data-trigger="click" 
          data-content="It's really not so complicated, you just put this HTML together with the Javascript and CSS, bake for about 10 minutes, and you have context!">
            <h2>Popover on Click</h2>
            <li class="icon-info-circle"></li>
          </a>
        </p>
        <p>
          <a href="#" title="See What I Did There?" data-placement="bottom" data-toggle="popover" data-trigger="focus" data-content="It's really not so complicated, you just put this HTML together with the Javascript and CSS, bake for about 10 minutes, and you have context!">
            <h2>Popover on Focus</h2>
          </a>
        </p>
        <p>
          <a href="#" title="See What I Did There?" data-placement="top" data-toggle="popover" data-trigger="hover" data-content="Test Content">
            <h2>Popover on Hover</h2>
          </a>
        </p>
        <p>
          <a href="#" title="See What I Did There?" data-placement="top" data-toggle="popover" data-trigger="hover" data-content="$popoverContent$">
            <h2>Popover filled with Token</h2>
          </a>
        </p>

        <p>
          <a id="popoverInJS" href="#">
            <span>Popover init in js</span>
          </a>
        </p>
      </html>
    </panel>
  </row>
   <row>
    <panel>
      <title>Init in JS and add to existing splunk Components</title>
      <input id="field1" type="multiselect" token="field1">
        <label>Field 1</label>
        <choice value="*">Alle</choice>
        <choice value="value2">Wert 2</choice>
        <choice value="value3">Wert 3</choice>
        <choice value="value4">Wert 4</choice>
        <default>*</default>
      </input>
    </panel>
    </row>
  <row id="docu">
    <html>
        <input type="checkbox" id="components" />
        <label for="components">Documentation</label>
        <div id="readme" class="content"></div>
    </html>
  </row>
</form>